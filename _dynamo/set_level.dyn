{
  "Uuid": "50b7ae75-2e2f-41b2-8f1e-593b0313ebc4",
  "IsCustomNode": false,
  "Description": null,
  "Name": "set_level",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import math\r\nimport clr\r\nfrom pprint import pprint\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\r\nsys.path.append(pyt_path)\r\n\r\n# Import ToDSType(bool) extension method\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n# Import DocumentManager and TransactionManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Import RevitAPI\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\n\r\ndef get_elevation(element):\r\n\tresult = None\r\n\r\n\tif element.Location.GetType() == LocationPoint:\r\n\t\tresult = element.Location.Point.Z\r\n\t\r\n\tif element.Location.GetType() == LocationCurve:\r\n\t\tmidle_of_curve = (element.Location.Curve.GetEndPoint(0) + element.Location.Curve.GetEndPoint(1)) / 2\r\n\t\tresult = midle_of_curve.Z\r\n\r\n\treturn result\r\n\r\ndef get_actual_level_id(element):\r\n\tlevels_list = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Levels).WhereElementIsNotElementType().ToElements()\r\n\tlevels = { l.ProjectElevation: l.Id for l in levels_list }\r\n\t\r\n\telev, actual_level_id = sorted(levels.items(), reverse=True).pop()\r\n\tfor elevation, level_id in sorted(levels.items()):\r\n\t\tif get_elevation(element) > elevation:\r\n\t\t\tactual_level_id = level_id\r\n\r\n\treturn actual_level_id\r\n\r\ndef get_elements_of_category(doc, category):\r\n\telements = FilteredElementCollector(doc).OfCategory(category).WhereElementIsNotElementType().ToElements()\r\n\tleveled_elements = dict()\r\n\t\r\n\tfor e in elements:\r\n\t\t\r\n\t\tif e.LevelId.IntegerValue > 0:\r\n\t\t\tlevel_id = e.LevelId\r\n\t\telif e.LevelId.IntegerValue < 0:\r\n\t\t\tlevel_id = e.ReferenceLevel.Id\r\n\r\n\t\tif get_actual_level_id(e) == level_id:\r\n\t\t\t#print('--- skipping element', e.Id)\r\n\t\t\tcontinue\r\n\t\t\r\n\t\tif get_actual_level_id(e) != level_id:\r\n\t\t\tprint()\r\n\t\t\t#pprint({\r\n\t\t\t#\t\t'-': '-',\r\n\t\t\t#\t\t'1. element': e.Id,\r\n\t\t\t#\t\t'2. level': level_id,\r\n\t\t\t#\t\t'3. actual level': get_actual_level_id(e),\r\n\t\t\t#\t\t})\r\n\r\n\t\tif leveled_elements.get(level_id):\r\n\t\t\tleveled_elements[level_id].append(e)\r\n\t\telse:\r\n\t\t\tleveled_elements[level_id] = list()\r\n\t\t\tleveled_elements[level_id].append(e)\r\n\t\t\t\r\n\tprint(category)\r\n\t# pprint(leveled_elements, depth=2)\r\n\treturn leveled_elements\r\n\r\ndef change_level(doc, element):\r\n\t\r\n\tlevels_list = FilteredElementCollector(doc).OfCategory(BuiltInCategory.OST_Levels).WhereElementIsNotElementType().ToElements()\r\n\tlevels = {l.Id: l.ProjectElevation for l in levels_list }\r\n\t\r\n\tnew_lvl_id = get_actual_level_id(element)\r\n\tlevel_param = element.get_Parameter(BuiltInParameter.FAMILY_LEVEL_PARAM)\r\n\tif level_param is not None and not level_param.IsReadOnly:\r\n\t\tlevel_param.Set(new_lvl_id)\r\n\r\n\t\r\n\tcurve_level_param = element.get_Parameter(BuiltInParameter.RBS_START_LEVEL_PARAM)\r\n\tif curve_level_param is not None and not curve_level_param.IsReadOnly:\r\n\t\tcurve_level_param.Set(new_lvl_id)\r\n\r\n\tnew_elevation = get_elevation(element) - levels[new_lvl_id]\r\n\televation = element.LookupParameter('Отметка от уровня')\r\n\tif elevation is not None:\r\n\t\tprint('setting elevation')\r\n\t\televation.Set(new_elevation)\r\n\telse:\r\n\t\tcomment = element.LookupParameter('Комментарии')\r\n\t\tcomment.Set(str('level is wrong'))\r\n\r\ncategories = [\r\n\t\t\t\tBuiltInCategory.OST_MechanicalEquipment,\r\n\t\t\t\tBuiltInCategory.OST_PipeCurves,\r\n\t\t\t\tBuiltInCategory.OST_PipeFitting,\r\n\t\t\t\tBuiltInCategory.OST_PipeAccessory,\r\n\t\t\t\tBuiltInCategory.OST_DuctCurves,\r\n\t\t\t\tBuiltInCategory.OST_DuctFitting,\r\n\t\t\t\tBuiltInCategory.OST_DuctAccessory,\r\n\t\t\t\tBuiltInCategory.OST_DuctTerminal,\r\n\t\t\t]\r\n\r\nwith Transaction(doc, 'placement according levels') as t:\r\n\tt.Start()\r\n\tfor category in categories:\r\n\t\tleveled_elements = get_elements_of_category(doc, category)\r\n\t\tfor elements in leveled_elements.values():\r\n\t\t\tfor element in elements:\r\n\t\t\t\tchange_level(doc, element)\r\n\tt.Commit()\r\n\r\nprint(datetime.now().isoformat(), ' done')\r\n",
      "VariableInputPorts": true,
      "Id": "cd442889748e4abb996b757dd25ed178",
      "Inputs": [
        {
          "Id": "ff8323702287493c8acfd4bd89afa0ba",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12f42d50e937490e838690651787e8b4",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "bd2013ef961d44638f3d5af3eaf99090",
      "Inputs": [
        {
          "Id": "ec433369609348bcb0595e2ee6f6664d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ed23106be404986831dc7b3493dd696",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a45d4c49c6741e6b846d35bc71ee488",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "debf3fe3a55f4b379c43a919058bace6",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "63ebf7390a8c4dc5bf995876867e06fb",
      "Inputs": [
        {
          "Id": "ddb954ae8bda4c20bf75a042a9539f9d",
          "Name": "list",
          "Description": "Список, из которого требуется получить последний элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08a1ff3ca63c4cd28505726cfedf93fd",
          "Name": "last",
          "Description": "Последний элемент в списке.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Извлечение последнего элемента в списке.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Уровень",
      "Id": "24fc3f31619a48929014bea71dd6c55a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0e218091f2ab4bb8bd5aeeca93ebe082",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "84a475ff4a214f1381243fc3ce214988",
      "Inputs": [
        {
          "Id": "cab5f01e029b415ab6c5059d225cf3ed",
          "Name": "list",
          "Description": "Список, из которого требуется получить первый элемент.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0df31ef9db684c05a6db098d2de1fef5",
          "Name": "item",
          "Description": "Первый элемент в списке.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение первого элемента в списке.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Data.ParseJSON@string",
      "Id": "54e06472b7ca47ce8baeaa8022f02e0d",
      "Inputs": [
        {
          "Id": "2d2718363a794a5fa2614d230c413003",
          "Name": "json",
          "Description": "Строка формата JSON\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "60f666f13ce94d03882d7020782a62c3",
          "Name": "result",
          "Description": "Тип результата зависит от содержимого строки ввода. Результат может быть элементарным значением (например, строковым, логическим или двойным значением), списком либо словарем.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Анализ преобразует произвольную строку формата JSON в значение. Противоположно методу JSON.Stringify.\n\nData.ParseJSON (json: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6758a60b86964dc0bc97c42431afd220",
      "Inputs": [
        {
          "Id": "5ac03851792643fc85e7cff4ad9382d7",
          "Name": "path",
          "Description": "Путь к файлу.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f12493f2baf46fabba110999944e5f9",
          "Name": "file",
          "Description": "Файловый объект",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание нового объекта на основе пути."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.ReadText@var",
      "Id": "df4b67f5b8f24ab8ac66147033529013",
      "Inputs": [
        {
          "Id": "521f047911cf45348e9d6d1e882fe19c",
          "Name": "file",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b345fb6cf59d4bbdb1a2b07da94887d6",
          "Name": "str",
          "Description": "Содержимое текстового файла.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Чтение текстового файла с выводом содержимого в виде строки.\n\nFileSystem.ReadText (file: var): string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Загрузить стандартную библиотеку Python и библиотеку DesignScript\r\nimport math\r\nimport clr\r\nfrom pprint import pprint\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\r\nsys.path.append(pyt_path)\r\n\r\n# Import ToDSType(bool) extension method\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n# Import DocumentManager and TransactionManager\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# Import RevitAPI\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\n# Разместите код под этой строкой\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# Назначьте вывод переменной OUT.\r\nrevit_file = list(doc.PathName.Split('\\\\')).pop()\r\njson_file = list(doc.PathName.Split('\\\\')).pop().replace('.rvt', '.json')\r\njson_path = doc.PathName.replace(revit_file, json_file)\r\n\r\nOUT = json_path",
      "VariableInputPorts": true,
      "Id": "58606019d2074e008b36c489d15c973d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7a64d26fd79641bc8848a9c755218f84",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария IronPython."
    }
  ],
  "Connectors": [
    {
      "Start": "08a1ff3ca63c4cd28505726cfedf93fd",
      "End": "4a45d4c49c6741e6b846d35bc71ee488",
      "Id": "bf452718bde744679e829e7677c449ab"
    },
    {
      "Start": "0e218091f2ab4bb8bd5aeeca93ebe082",
      "End": "7ed23106be404986831dc7b3493dd696",
      "Id": "5fbdd598cb3f4a5f9a65e60060294616"
    },
    {
      "Start": "0df31ef9db684c05a6db098d2de1fef5",
      "End": "ec433369609348bcb0595e2ee6f6664d",
      "Id": "04879055f0714c59b213227d3537edde"
    },
    {
      "Start": "60f666f13ce94d03882d7020782a62c3",
      "End": "ff8323702287493c8acfd4bd89afa0ba",
      "Id": "9bc3b6c74adf49b1bd9175c87d54a4cb"
    },
    {
      "Start": "2f12493f2baf46fabba110999944e5f9",
      "End": "521f047911cf45348e9d6d1e882fe19c",
      "Id": "1ca4fd4da16146739d59b87945d74ca5"
    },
    {
      "Start": "b345fb6cf59d4bbdb1a2b07da94887d6",
      "End": "2d2718363a794a5fa2614d230c413003",
      "Id": "e6823d53ee8348f08c6794aac7c6e3b8"
    },
    {
      "Start": "7a64d26fd79641bc8848a9c755218f84",
      "End": "5ac03851792643fc85e7cff4ad9382d7",
      "Id": "205c193a4f454f6b9b0c5a326be2a22b"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Фоновый просмотр",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "cd442889748e4abb996b757dd25ed178",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1034.7875264241104,
        "Y": 467.68079756473463
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "bd2013ef961d44638f3d5af3eaf99090",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1695.04692680883,
        "Y": 421.064653643974
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "63ebf7390a8c4dc5bf995876867e06fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1324.47030242773,
        "Y": 575.902019240973
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "24fc3f31619a48929014bea71dd6c55a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1323.54928654003,
        "Y": 468.752315006474
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "84a475ff4a214f1381243fc3ce214988",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1318.81927365723,
        "Y": 311.333333333334
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ParseJSON",
        "Id": "54e06472b7ca47ce8baeaa8022f02e0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 821.12973852021207,
        "Y": 468.00004114399394
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "6758a60b86964dc0bc97c42431afd220",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 518.559752020334,
        "Y": 467.043130715474
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.ReadText",
        "Id": "df4b67f5b8f24ab8ac66147033529013",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 647.814986114434,
        "Y": 466.970858916475
      },
      {
        "ShowGeometry": true,
        "Name": "Get_JSON_Path",
        "Id": "58606019d2074e008b36c489d15c973d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 396.03479732834359,
        "Y": 466.88285198661646
      }
    ],
    "Annotations": [],
    "X": -144.63032219604725,
    "Y": -49.5402717582088,
    "Zoom": 0.65527233321848866
  }
}